<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tcp on 蓝宝石的傻话</title><link>/tags/tcp/</link><description>Recent content in Tcp on 蓝宝石的傻话</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sat, 25 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/tcp/rss.xml" rel="self" type="application/rss+xml"/><item><title>eBPF系列之：DeepFlow 扩展协议解析实践（MongoDB协议与Kafka协议）</title><link>/posts/ebpf/deepflow-agent-proto-dev/</link><pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate><guid>/posts/ebpf/deepflow-agent-proto-dev/</guid><description>&lt;ul&gt;
&lt;li&gt;
&lt;a href="#%e6%a6%82%e8%bf%b0" title="概述：" &gt;
 概述：
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#%e5%a6%82%e4%bd%95%e5%88%86%e6%9e%90%e4%b8%80%e4%b8%aa%e5%8d%8f%e8%ae%aemongodb" title="如何分析一个协议(MongoDB)" &gt;
 如何分析一个协议(MongoDB)
 
&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="#%e5%8d%8f%e8%ae%ae%e6%96%87%e6%a1%a3%e7%9a%84%e5%88%86%e6%9e%90%e6%80%9d%e8%b7%af" title="协议文档的分析思路" &gt;
 协议文档的分析思路
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#mongodb%e5%8d%8f%e8%ae%ae%e6%93%8d%e4%bd%9c%e7%a0%81%e8%af%b4%e6%98%8e%e8%a1%a8" title="MongoDB协议操作码说明表" &gt;
 MongoDB协议操作码说明表
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#%e5%af%b9%e6%9c%80%e5%b8%b8%e8%a7%81%e7%9a%84%e6%93%8d%e4%bd%9c%e7%a0%81op_msg%e5%88%86%e6%9e%90" title="对最常见的操作码OP_MSG分析" &gt;
 对最常见的操作码&lt;code&gt;OP_MSG&lt;/code&gt;分析
 
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#%e5%9c%a8deepflow-agent%e6%89%a9%e5%b1%95%e4%b8%80%e4%b8%aa%e5%8d%8f%e8%ae%ae%e8%a7%a3%e6%9e%90%e9%87%87%e9%9b%86" title="在DeepFlow Agent扩展一个协议解析采集" &gt;
 在&lt;code&gt;DeepFlow Agent&lt;/code&gt;扩展一个协议解析采集
 
&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="#deepflow-agent%e7%9a%84%e5%bc%80%e5%8f%91%e6%96%87%e6%a1%a3%e6%a6%82%e8%a6%81" title="DeepFlow Agent的开发文档概要" &gt;
 &lt;code&gt;DeepFlow Agent&lt;/code&gt;的开发文档概要
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#%e4%bb%a3%e7%a0%81%e6%8c%87%e5%bc%95" title="代码指引" &gt;
 代码指引
 
&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="#%e5%ae%9a%e4%b9%89%e4%b8%80%e4%b8%aa%e5%8d%8f%e8%ae%ae%e5%b9%b6%e7%94%a8%e4%b8%80%e4%b8%aa%e5%b8%b8%e9%87%8f%e6%a0%87%e8%af%86" title="定义一个协议，并用一个常量标识。" &gt;
 定义一个协议，并用一个常量标识。
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#%e4%b8%ba%e6%96%b0%e5%8d%8f%e8%ae%ae%e5%87%86%e5%a4%87%e8%a7%a3%e6%9e%90%e9%80%bb%e8%be%91" title="为新协议准备解析逻辑" &gt;
 为新协议准备解析逻辑
 
&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="#%e5%ae%9a%e4%b9%89%e7%bb%93%e6%9e%84%e4%bd%93" title="定义结构体" &gt;
 定义结构体
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#%e5%ae%9e%e7%8e%b0l7protocolparserinterface" title="实现 L7ProtocolParserInterface" &gt;
 实现 &lt;code&gt;L7ProtocolParserInterface&lt;/code&gt;
 
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#%e5%88%a9%e7%94%a8wasm%e6%8f%92%e4%bb%b6%e6%89%a9%e5%b1%95deepflow%e7%9a%84%e5%8d%8f%e8%ae%ae%e9%87%87%e9%9b%86" title="利用Wasm插件扩展DeepFlow的协议采集" &gt;
 利用&lt;code&gt;Wasm&lt;/code&gt;插件扩展&lt;code&gt;DeepFlow&lt;/code&gt;的协议采集
 
&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="#kafka%e5%8d%8f%e8%ae%ae%e5%88%86%e6%9e%90" title="Kafka协议分析" &gt;
 &lt;code&gt;Kafka&lt;/code&gt;协议分析
 
&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="#kafka%e7%9a%84header%e5%92%8cdata%e6%a6%82%e8%a7%88" title="Kafka的Header和Data概览" &gt;
 &lt;code&gt;Kafka&lt;/code&gt;的&lt;code&gt;Header&lt;/code&gt;和&lt;code&gt;Data&lt;/code&gt;概览
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#kafka%e7%9a%84fetch-api" title="Kafka的Fetch API" &gt;
 Kafka的Fetch API
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#kafka%e7%9a%84produce-api" title="Kafka的Produce API" &gt;
 Kafka的Produce API
 
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#kafka%e5%8d%8f%e8%ae%aedeepflow-agent%e5%8e%9f%e7%94%9f%e8%a7%a3%e7%a0%81" title="Kafka协议DeepFlow Agent原生解码" &gt;
 Kafka协议DeepFlow Agent原生解码
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#deepflow-agent%e7%9a%84-wasm-%e6%8f%92%e4%bb%b6" title="DeepFlow Agent的 Wasm 插件" &gt;
 &lt;code&gt;DeepFlow Agent&lt;/code&gt;的 &lt;code&gt;Wasm&lt;/code&gt; 插件
 
&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="#wasm-go-sdk-%e7%9a%84%e6%a1%86%e6%9e%b6" title="Wasm Go SDK 的框架" &gt;
 Wasm Go SDK 的框架
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#%e6%8f%92%e4%bb%b6%e4%bb%a3%e7%a0%81%e6%8c%87%e5%bc%95" title="插件代码指引" &gt;
 插件代码指引
 
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#%e7%bb%93%e8%af%ad" title="结语" &gt;
 结语
 
&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="#%e5%8e%9f%e7%94%9frust%e6%89%a9%e5%b1%95" title="原生Rust扩展" &gt;
 原生Rust扩展
 
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#wasm%e6%8f%92%e4%bb%b6%e6%89%a9%e5%b1%95" title="Wasm插件扩展" &gt;
 Wasm插件扩展
 
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#%e9%99%84%e5%bd%95" title="附录" &gt;
 附录
 
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="position:relative; padding-bottom:75%; width:100%; height:0"&gt;
&lt;iframe src="//player.bilibili.com/player.html?isOutside=true&amp;aid=921401645&amp;bvid=BV1Nu4y1A7ZC&amp;cid=1345829549&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id="概述"&gt;概述：
&lt;a class="header-anchor" href="#%e6%a6%82%e8%bf%b0"&gt;&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;MongoDB&lt;/code&gt; 目前使用广泛，但是缺乏有效的可观测能力。
&lt;code&gt;DeepFlow&lt;/code&gt; 在可观测能力上是很优秀的解决方案，但是却缺少了对 &lt;code&gt;MongoDB&lt;/code&gt; 协议的支持。
该文是为 &lt;code&gt;DeepFlow&lt;/code&gt; 扩展了 &lt;code&gt;MongoDB&lt;/code&gt; 协议解析，增强 &lt;code&gt;MongoDB&lt;/code&gt; 生态的可观测能力，简要描述了从协议文档分析到在 &lt;code&gt;DeepFlow&lt;/code&gt; 内实现代码解析的过程拆解。&lt;/p&gt;</description></item><item><title>Linode的BBR简单测试</title><link>/posts/old/linode-bbr-test/</link><pubDate>Mon, 10 Apr 2017 00:00:00 +0000</pubDate><guid>/posts/old/linode-bbr-test/</guid><description>&lt;h2 id="概述"&gt;概述:
&lt;a class="header-anchor" href="#%e6%a6%82%e8%bf%b0"&gt;&lt;/a&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;TCP BBR 致力于解决两个问题：
&lt;ul&gt;
&lt;li&gt;在有一定丢包率的网络链路上充分利用带宽。非常适合高延迟、高带宽的网络链路。&lt;/li&gt;
&lt;li&gt;降低网络链路上的 buffer 占用率，从而降低延迟。非常适合慢速接入网络的用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;测试目的:
这次的测试主要是针对丢包率.更有说服力的测试请参考
&lt;a href="https://drive.google.com/file/d/0B4YZ_0yTgbJEa21CbUVLWFdrX2c/view" title="Lawrence Brakmo的BBR Report" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl"&gt;
 Lawrence Brakmo的BBR Report
 
 &lt;i class="fa fa-external-link-alt"&gt;&lt;/i&gt;
 
&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://blog.csdn.net/dog250/article/details/54754784" title="BBR的另一面" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl"&gt;
 BBR的另一面
 
 &lt;i class="fa fa-external-link-alt"&gt;&lt;/i&gt;
 
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="测试准备"&gt;测试准备：
&lt;a class="header-anchor" href="#%e6%b5%8b%e8%af%95%e5%87%86%e5%a4%87"&gt;&lt;/a&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ADDR01：aaa.aaa.aaa.aaa&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ uname -r
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;4.8.6-x86_64-linode78
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;ADDR02：bbb.bbb.bbb.bbb&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# uname -r&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;4.8.6-x86_64-linode78
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h2 id="测试方式"&gt;测试方式：
&lt;a class="header-anchor" href="#%e6%b5%8b%e8%af%95%e6%96%b9%e5%bc%8f"&gt;&lt;/a&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;模拟丢包1%-30%的场景，分别测试不同内核开启BBR先后的情况。
用到的tc指令：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;2
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;3
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;4
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;5
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;6
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;7
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 清理tc规则：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;tc qdisc del root dev eth0
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 模拟1%丢包：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;tc qdisc add dev eth0 root netem loss 1%
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 模拟10%丢包：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;tc qdisc add dev eth0 root netem loss 10%
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 模拟30%丢包：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;tc qdisc add dev eth0 root netem loss 30%
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;测试从从ADDR02传数据到ADDR01,ADDR01的内核不变,ADDR02在每次测试都会调整内核重启。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="测试过程"&gt;测试过程：
&lt;a class="header-anchor" href="#%e6%b5%8b%e8%af%95%e8%bf%87%e7%a8%8b"&gt;&lt;/a&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;步骤略,test.gz约160MB,过程大致如下:
没有启用BBR的情况，从ADDR02传数据到ADDR01：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;2
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;3
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;4
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;5
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ rsync -ave &lt;span style="color:#e6db74"&gt;&amp;#34;ssh -l mickey&amp;#34;&lt;/span&gt; --progress test.gz mickey@bbb.bbb.bbb.bbb:/home/mickey/test.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sending incremental file list
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;test.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#ae81ff"&gt;166042909&lt;/span&gt; 100% 3.27MB/s 0:00:48 &lt;span style="color:#f92672"&gt;(&lt;/span&gt;xfer#1, to-check&lt;span style="color:#f92672"&gt;=&lt;/span&gt;0/1&lt;span style="color:#f92672"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sent &lt;span style="color:#ae81ff"&gt;166063274&lt;/span&gt; bytes received &lt;span style="color:#ae81ff"&gt;31&lt;/span&gt; bytes 3288382.28 bytes/sec
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;total size is &lt;span style="color:#ae81ff"&gt;166042909&lt;/span&gt; speedup is 1.00
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h2 id="测试数据比对"&gt;测试数据比对:
&lt;a class="header-anchor" href="#%e6%b5%8b%e8%af%95%e6%95%b0%e6%8d%ae%e6%af%94%e5%af%b9"&gt;&lt;/a&gt;
&lt;/h2&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th style="text-align: center"&gt;&lt;/th&gt;
 &lt;th style="text-align: center"&gt;4.8.6-x86_64-linode78&lt;/th&gt;
 &lt;th style="text-align: center"&gt;4.9.15-x86_64-linode78&lt;/th&gt;
 &lt;th style="text-align: center"&gt;非linode的官方4.10内核(generic)&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td style="text-align: center"&gt;没有启动BBR正常情况&lt;/td&gt;
 &lt;td style="text-align: center"&gt;3.27MB/s&lt;/td&gt;
 &lt;td style="text-align: center"&gt;3.36MB/s&lt;/td&gt;
 &lt;td style="text-align: center"&gt;没有测试&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: center"&gt;启动BBR正常情况&lt;/td&gt;
 &lt;td style="text-align: center"&gt;没有测试&lt;/td&gt;
 &lt;td style="text-align: center"&gt;3.45MB/s&lt;/td&gt;
 &lt;td style="text-align: center"&gt;2.31MB/s&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: center"&gt;启动BBR丢包1%&lt;/td&gt;
 &lt;td style="text-align: center"&gt;3.19MB/s&lt;/td&gt;
 &lt;td style="text-align: center"&gt;没有测试&lt;/td&gt;
 &lt;td style="text-align: center"&gt;没有测试&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: center"&gt;启动BBR丢包10%&lt;/td&gt;
 &lt;td style="text-align: center"&gt;没有测试&lt;/td&gt;
 &lt;td style="text-align: center"&gt;3.21MB/s&lt;/td&gt;
 &lt;td style="text-align: center"&gt;2.81MB/s&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td style="text-align: center"&gt;启动BBR丢包30%&lt;/td&gt;
 &lt;td style="text-align: center"&gt;97.30kB/s(在20分钟内没有传输完成中断得到的最后结果)&lt;/td&gt;
 &lt;td style="text-align: center"&gt;1.35MB/s&lt;/td&gt;
 &lt;td style="text-align: center"&gt;1.15MB/s&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id="测试总结和当时情况以上述结果来总结"&gt;测试总结和当时情况(以上述结果来总结):
&lt;a class="header-anchor" href="#%e6%b5%8b%e8%af%95%e6%80%bb%e7%bb%93%e5%92%8c%e5%bd%93%e6%97%b6%e6%83%85%e5%86%b5%e4%bb%a5%e4%b8%8a%e8%bf%b0%e7%bb%93%e6%9e%9c%e6%9d%a5%e6%80%bb%e7%bb%93"&gt;&lt;/a&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;linode自己编译的内核有明显针对性优化,效果比较明显.&lt;/li&gt;
&lt;li&gt;启动bbr后在丢包30%的情况下还能完成传输,bbr的效果也比较明显;&lt;/li&gt;
&lt;li&gt;4.10内核选择了generic没有选择lowlatency.&lt;/li&gt;
&lt;li&gt;本来还打算测50%的丢包.但是50%设置后几乎无法远程操作ADDR01而放弃测试.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="附录"&gt;附录：
&lt;a class="header-anchor" href="#%e9%99%84%e5%bd%95"&gt;&lt;/a&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;centos7官方内核的升级方法：
&lt;ul&gt;
&lt;li&gt;升级内核:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;2
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;yum --enablerepo&lt;span style="color:#f92672"&gt;=&lt;/span&gt;elrepo-kernel install kernel-ml -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;更新启动&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;2
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;egrep ^menuentry /etc/grub2.cfg | cut -f &lt;span style="color:#ae81ff"&gt;2&lt;/span&gt; -d &lt;span style="color:#ae81ff"&gt;\&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;grub2-set-default &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt; &lt;span style="color:#75715e"&gt;#default 0表示第一个内核设置为默认运行, 选择最新内核就对了&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;开启BBR：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;"&gt;&lt;tr&gt;&lt;td style="vertical-align:top;padding:0;margin:0;border:0;"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;1
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;2
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;3
&lt;/span&gt;&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%"&gt;
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;modprobe tcp_bbr
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;echo &lt;span style="color:#e6db74"&gt;&amp;#34;net.core.default_qdisc=fq&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysctl.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;echo &lt;span style="color:#e6db74"&gt;&amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysctl.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sysctl -p
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>监控采集点点记录</title><link>/posts/opentelemetry/monitor-experience/</link><pubDate>Mon, 20 Feb 2017 00:00:00 +0000</pubDate><guid>/posts/opentelemetry/monitor-experience/</guid><description>&lt;h2 id="mysql的监控"&gt;MYSQL的监控
&lt;a class="header-anchor" href="#mysql%e7%9a%84%e7%9b%91%e6%8e%a7"&gt;&lt;/a&gt;
&lt;/h2&gt;&lt;h3 id="mysql权限经验原则"&gt;MySQL权限经验原则
&lt;a class="header-anchor" href="#mysql%e6%9d%83%e9%99%90%e7%bb%8f%e9%aa%8c%e5%8e%9f%e5%88%99"&gt;&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;权限控制主要是出于安全因素，因此需要遵循一下几个经验原则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;只授予能满足需要的最小权限，防止用户干坏事。比如用户只是需要查询，那就只给select权限就可以了，不要给用户赋予update、insert或者delete权限。&lt;/li&gt;
&lt;li&gt;创建用户的时候限制用户的登录主机，一般是限制成指定IP或者内网IP段。&lt;/li&gt;
&lt;li&gt;初始化数据库的时候删除没有密码的用户。安装完数据库的时候会自动创建一些用户，这些用户默认没有密码。&lt;/li&gt;
&lt;li&gt;为每个用户设置满足密码复杂度的密码。&lt;/li&gt;
&lt;li&gt;定期清理不需要的用户。回收权限或者删除用户。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;eg:&lt;/p&gt;</description></item></channel></rss>