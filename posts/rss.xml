<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 蓝宝石的傻话</title><link>/posts/</link><description>Recent content in Posts on 蓝宝石的傻话</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 25 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="/posts/rss.xml" rel="self" type="application/rss+xml"/><item><title>DeepFlow扩展协议实践</title><link>/posts/opentelemetry/deepflow-agent-proto-dev/</link><pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate><guid>/posts/opentelemetry/deepflow-agent-proto-dev/</guid><description>概述： 如何分析一个协议(MongoDB) 协议文档的分析思路 MongoDB协议操作码说明表 对最常见的操作码OP_MSG分析 在DeepFlow A</description></item><item><title>VictoriaMetrics的指标流聚合能力应用</title><link>/posts/opentelemetry/stream-metrics-one/</link><pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate><guid>/posts/opentelemetry/stream-metrics-one/</guid><description>社区VM对指标流聚合能力分析与问题 一、VictoriaMetrics开源项目的原生能力 VictoriaMetrics项目中的流聚合能力是从1</description></item><item><title>闲聊一下CPU时序和现代操作系统二三事</title><link>/posts/opentelemetry/talk-about-cpu-timer/</link><pubDate>Fri, 20 Jan 2023 00:00:00 +0000</pubDate><guid>/posts/opentelemetry/talk-about-cpu-timer/</guid><description>时分系统和Linux 首先我们补习一下时分系统，时分系统是一个非常重要的操作系统概念,它最大限度地提高了运算机的利用率,是实现多道程序并发执行</description></item><item><title>监控系统企业架构演进史-跨地域混合云</title><link>/posts/opentelemetry/prometheus-evolution-history-two/</link><pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate><guid>/posts/opentelemetry/prometheus-evolution-history-two/</guid><description>前情概述： 在《监控系统企业架构演进史-初入Prometheus》中，监控系统已经从单体架构升级到单IDC分布式架构了。 前一篇文章的内容是适用</description></item><item><title>监控系统企业架构演进史-初入Prometheus</title><link>/posts/opentelemetry/prometheus-evolution-history-one/</link><pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate><guid>/posts/opentelemetry/prometheus-evolution-history-one/</guid><description>Prometheus是一个开源的监控与时间序列数据库系统,在近年来得到了越来越广泛的应用。 官方的架构图如图所示： 本系列文章会以Prometh</description></item><item><title>Linode的BBR简单测试</title><link>/posts/old/linode-bbr-test/</link><pubDate>Mon, 10 Apr 2017 00:00:00 +0000</pubDate><guid>/posts/old/linode-bbr-test/</guid><description>概述: TCP BBR 致力于解决两个问题： 在有一定丢包率的网络链路上充分利用带宽。非常适合高延迟、高带宽的网络链路。 降低网络链路上的 buffer 占用率，从而降低延</description></item><item><title>树莓派 RaspberryPi docker集群</title><link>/posts/old/rasp_pi_docker/</link><pubDate>Wed, 08 Mar 2017 00:00:00 +0000</pubDate><guid>/posts/old/rasp_pi_docker/</guid><description>概述： 参考 Hypriot 的博客，我买了1块Rasp2代板和2块Rasp3代板。 其中2代默认安装了 Hypriot 的系统。3代板如果您有兴趣可以自己参考 《Buildin</description></item><item><title>ARM的点点滴滴记录</title><link>/posts/old/arm-board-note/</link><pubDate>Mon, 27 Feb 2017 00:00:00 +0000</pubDate><guid>/posts/old/arm-board-note/</guid><description>Raspberry Pi 我用树莓派搭建docker集群环境，参考 Hypriot 的博客 CubieBoard 安装docker 选择Hypriot(截止到2017年3月版本是docker 1.11.1) Install dependencies 1 $ apt-get</description></item><item><title>GitHub博客的搭建</title><link>/posts/old/blog-mickeyzzc-github/</link><pubDate>Sun, 26 Feb 2017 00:00:00 +0000</pubDate><guid>/posts/old/blog-mickeyzzc-github/</guid><description>2023年的博客从hexo切换到hugo 工具选用了 hugo 主题选择了 Hugo.NexT CDN选择了 CloudFlare 迁移过程 搭建hugo新环境 1 2 3 4 5 6 7 hugo new site mickeyzzcblog cd mickeyzzcblog git init git submodule add</description></item><item><title>监控采集点点记录</title><link>/posts/opentelemetry/monitor-experience/</link><pubDate>Mon, 20 Feb 2017 00:00:00 +0000</pubDate><guid>/posts/opentelemetry/monitor-experience/</guid><description>MYSQL的监控 MySQL权限经验原则 权限控制主要是出于安全因素，因此需要遵循一下几个经验原则： 只授予能满足需要的最小权限，防止用户干坏事。</description></item><item><title>跨城区局域网的搭建（基于Docker）</title><link>/posts/old/mi-docker-net/</link><pubDate>Fri, 20 Jan 2017 00:00:00 +0000</pubDate><guid>/posts/old/mi-docker-net/</guid><description>概述： 管理复杂网络内的系统,有时候需要突破网络限制.有比较多的方案,比如ss5,Shadowsocks,vpn等. 这里提供一种方案是利用 docker-openvpn 实</description></item><item><title>Tumx + Git + OhMyZsh + VIM</title><link>/posts/old/zsh-tmux-vim-git/</link><pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate><guid>/posts/old/zsh-tmux-vim-git/</guid><description>Ubuntu下的环境： 要求： tmux &amp;gt;= 2.1 vim &amp;gt;= 7.3 zsh (oh-my-zsh) git 部署环境： TMUX(使用 gpakosz 的配置)： 部署方式： 1 2 3 4 5 $ cd ~ $ git clone https://github.com/gpakosz/.tmux.git $ ln -s -f .tmux/.tmux.conf $ cp .tmux/.tmux.conf.local . $ sudo apt-get</description></item></channel></rss>