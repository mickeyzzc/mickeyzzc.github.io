<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>蓝宝石的傻话</title><link>/</link><description>Recent content on 蓝宝石的傻话</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 26 Jul 2022 21:46:25 +0800</lastBuildDate><atom:link href="/rss.xml" rel="self" type="application/rss+xml"/><item><title>About me</title><link>/about.html</link><pubDate>Thu, 09 Jun 2022 20:12:52 +0800</pubDate><guid>/about.html</guid><description>技术标签： Python 用flask框架写过一些服务。 Lua 用Openresty的时候写过一些简易webapi，在hekad中也简单使用过。 Java 在达内培训过，</description></item><item><title>ANSIBLE管理线上docker集群</title><link>/posts/old/ansible-docker/</link><pubDate>Mon, 01 May 2017 00:00:00 +0000</pubDate><guid>/posts/old/ansible-docker/</guid><description>Docker-Engine的安装: 利用 MickeyZZC / MiAnsibleRules 中的docker-engine ,参考以下playbook: #!/usr/bin/env ansible-playbook --- - hosts: all gather_facts: yes sudo: yes roles: - role: docker-engine tags: docker Docker-Container: 参考</description></item><item><title>VPS 记录</title><link>/posts/old/vps_oversea/</link><pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate><guid>/posts/old/vps_oversea/</guid><description>概述： 分类基于虚拟化 KVM 要想启用 BBR 需要切换内核，所以必须要 KVM 或者 XEN 架构的 VPS。 Openvz 开启 BBR （UML或LKL） 虽说 OpenVZ 在正常情况下是无法使用 BBR 的，但</description></item><item><title>Linode的BBR简单测试</title><link>/posts/old/linode-bbr-test/</link><pubDate>Mon, 10 Apr 2017 00:00:00 +0000</pubDate><guid>/posts/old/linode-bbr-test/</guid><description>简单阐述: TCP BBR 致力于解决两个问题： 在有一定丢包率的网络链路上充分利用带宽。非常适合高延迟、高带宽的网络链路。 降低网络链路上的 buffer 占用率，从而降</description></item><item><title>树莓派 RaspberryPi docker集群</title><link>/posts/old/rasp_pi_docker/</link><pubDate>Wed, 08 Mar 2017 06:20:21 +0000</pubDate><guid>/posts/old/rasp_pi_docker/</guid><description>概述： 参考 Hypriot 的博客，我买了1块Rasp2代板和2块Rasp3代板。 其中2代默认安装了 Hypriot 的系统。3代板如果您有兴趣可以自己参考 《Buildin</description></item><item><title>ARM的点点滴滴记录</title><link>/posts/old/arm-board-note/</link><pubDate>Mon, 27 Feb 2017 04:20:21 +0000</pubDate><guid>/posts/old/arm-board-note/</guid><description>Raspberry Pi 我用树莓派搭建docker集群环境，参考 Hypriot 的博客 CubieBoard 安装docker 选择Hypriot(截止到2017年3月版本是docker 1.11.1) Install dependencies $ apt-get install</description></item><item><title>GitHub博客的搭建（docker-hexo）</title><link>/posts/old/blog_mickeyzzc/</link><pubDate>Sun, 26 Feb 2017 04:20:21 +0000</pubDate><guid>/posts/old/blog_mickeyzzc/</guid><description>工具选用了 hexo ， 主题选择了 NexT.Mist 。 CDN选择了 CloudFlare 。 过程（详细步骤请参考官方网站，这里只提及过程中的注意点）： 参考 hexo 在本地安装，我用的是debian</description></item><item><title>跨城区局域网的搭建（基于Docker）</title><link>/posts/old/mi-docker-net/</link><pubDate>Fri, 20 Jan 2017 04:20:21 +0000</pubDate><guid>/posts/old/mi-docker-net/</guid><description>概述： 管理复杂网络内的系统,有时候需要突破网络限制.有比较多的方案,比如ss5,Shadowsocks,vpn等. 这里提供一种方案是利用 docker-openvpn 实</description></item><item><title>Tumx + Git + OhMyZsh + VIM</title><link>/posts/old/zsh-tmux-vim-git/</link><pubDate>Thu, 11 Aug 2016 04:20:21 +0000</pubDate><guid>/posts/old/zsh-tmux-vim-git/</guid><description>ubuntu下的环境： 要求： tmux &amp;gt;= 2.1 vim &amp;gt;= 7.3 zsh (oh-my-zsh) git 推荐环境： TMUX(使用 gpakosz 的配置)： 部署方式： $ cd ~ $ git clone https://github.com/gpakosz/.tmux.git $ ln -s -f .tmux/.tmux.conf $ cp .tmux/.tmux.conf.local . $ sudo apt-get install xclip ## Ub</description></item></channel></rss>